# Path to the directory you want scanned for media files.
#
# This option can be specified more than once if you want multiple directories
# scanned.
#
# If you want to restrict a media_dir to a specific content type, you can
# prepend the directory name with a letter representing the type (A, P or V),
# followed by a comma, as so:
#   * "A" for audio    (eg. media_dir=A,/var/lib/minidlna/music)
#   * "P" for pictures (eg. media_dir=P,/var/lib/minidlna/pictures)
#   * "V" for video    (eg. media_dir=V,/var/lib/minidlna/videos)
#
# WARNING: After changing this option, you need to rebuild the database. Either
#          run minidlna with the '-R' option, or delete the 'files.db' file
#          from the db_dir directory (see below).
#          On Debian, you can run, as root, 'service minidlna force-reload' instead.
media_dir=<%= node[:minidlna][:media_dir] %>

# Path to the directory that should hold the database and album art cache.
db_dir=<%= node[:minidlna][:db_dir] %>

# Path to the directory that should hold the log file.
log_dir=<%= node[:minidlna][:log_dir] %>

# Minimum level of importance of messages to be logged.
# Must be one of "off", "fatal", "error", "warn", "info" or "debug".
# "off" turns of logging entirely, "fatal" is the highest level of importance
# and "debug" the lowest.
log_level=<%= node[:minidlna][:log_level] %>

# Use a different container as the root of the directory tree presented to
# clients. The possible values are:
#   * "." - standard container
#   * "B" - "Browse Directory"
#   * "M" - "Music"
#   * "P" - "Pictures"
#   * "V" - "Video"
# if you specify "B" and client device is audio-only then "Music/Folders" will be used as root
root_container=<%= node[:minidlna][:root_container] %>

# Network interface(s) to bind to (e.g. eth0), comma delimited.
network_interface=<%= node[:minidlna][:network_interface] %>

# IPv4 address to listen on (e.g. 192.0.2.1).
listening_ip=<%= node[:minidlna][:listening_ip] %>

# Port number for HTTP traffic (descriptions, SOAP, media transfer).
port=<%= node[:minidlna][:port] %>

# URL presented to clients.
# The default is the IP address of the server on port 80.
presentation_url=<%= node[:minidlna][:presentation_url] %>

# Name that the DLNA server presents to clients.
friendly_name=<%= node[:minidlna][:friendly_name] %>

# Serial number the server reports to clients.
serial=<%= node[:minidlna][:serial] %>

# Model name the server reports to clients.
model_name=<%= node[:minidlna][:model_name] %>

# Model number the server reports to clients.
model_number=<%= node[:minidlna][:model_number] %>

# Automatic discovery of new files in the media_dir directory.
inotify=<%= node[:minidlna][:inotify] %>

# List of file names to look for when searching for album art. Names should be
# delimited with a forward slash ("/").
album_art_names=<%= node[:minidlna][:album_art_names] %>

# Strictly adhere to DLNA standards.
# This allows server-side downscaling of very large JPEG images, which may
# decrease JPEG serving performance on (at least) Sony DLNA products.
strict_dlna=<%= node[:minidlna][:strict_dlna] %>

# Support for streaming .jpg and .mp3 files to a TiVo supporting HMO.
enable_tivo=<%= node[:minidlna][:enable_tivo] %>

# Notify interval, in seconds.
notify_interval=<%= node[:minidlna][:notify_interval] %>

# Path to the MiniSSDPd socket, for MiniSSDPd support.
minissdpdsocket=<%= node[:minidlna][:minissdpdsocket] %>
